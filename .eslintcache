[{"/Users/davidmontague/Programming/pydantic/pydantic-errors-redirect/src/index.test.ts":"1","/Users/davidmontague/Programming/pydantic/pydantic-errors-redirect/src/index.ts":"2"},{"size":1825,"mtime":1682378301768,"results":"3","hashOfConfig":"4"},{"size":1506,"mtime":1682378540342,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xclw5p",{"filePath":"9","messages":"10","suppressedMessages":"11","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"12"},"/Users/davidmontague/Programming/pydantic/pydantic-errors-redirect/src/index.test.ts",[],[],"/Users/davidmontague/Programming/pydantic/pydantic-errors-redirect/src/index.ts",["13"],["14"],"// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface Env {\n  // Example binding to KV. Learn more at https://developers.cloudflare.com/workers/runtime-apis/kv/\n  // MY_KV_NAMESPACE: KVNamespace;\n  //\n  // Example binding to Durable Object. Learn more at https://developers.cloudflare.com/workers/runtime-apis/durable-objects/\n  // MY_DURABLE_OBJECT: DurableObjectNamespace;\n  //\n  // Example binding to R2. Learn more at https://developers.cloudflare.com/workers/runtime-apis/r2/\n  // MY_BUCKET: R2Bucket;\n  //\n  // Example binding to a Service. Learn more at https://developers.cloudflare.com/workers/runtime-apis/service-bindings/\n  // MY_SERVICE: Fetcher;\n}\n\n// https://errors.pydantic.dev/v2.0a3/u/decorator-missing-field\n//\n// https://docs.pydantic.dev/usage/errors/#decorator-missing-field\n\nexport default {\n  async fetch(\n    request: Request\n    // env: Env,\n    // ctx: ExecutionContext\n  ): Promise<Response> {\n    const { url } = request;\n    const { pathname } = new URL(url);\n    // the first item in the following split will be the version; currently unused\n    const [, variant, theRest] = pathname.slice(1).split(\"/\", 3);\n\n    if (![\"u\", \"v\"].includes(variant) || !theRest) {\n      return new Response(\"Not Found\", { status: 404 });\n    }\n\n\n\n\n    const redirectVariant = variant === \"u\" ? \"usage\" : \"validation\";\n    const redirectUrl = `https://docs.pydantic.dev/${redirectVariant}/errors/${theRest}`;\n\n    return Response.redirect(redirectUrl, 307);\n  },\n};\n",{"ruleId":"15","severity":2,"message":"16","line":35,"column":1,"nodeType":null,"messageId":"17","endLine":38,"endColumn":1,"fix":"18"},{"ruleId":"19","severity":2,"message":"20","line":2,"column":18,"nodeType":"21","messageId":"22","endLine":2,"endColumn":21,"suppressions":"23"},"prettier/prettier","Delete `⏎⏎⏎`","delete",{"range":"24","text":"25"},"@typescript-eslint/no-empty-interface","An empty interface is equivalent to `{}`.","Identifier","noEmpty",["26"],[1286,1289],"",{"kind":"27","justification":"25"},"directive"]